name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
      types:
        - opened
        - reopened
        - synchronize
        - ready_for_review
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: ${{ github.event_name == 'pull_request' }}
    name: Lint (cargo clippy)
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Rust (Stable) with caching
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: clippy

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Clippy
        run: cargo clippy -- -D warnings  # Treat warnings as errors

  test:
    name: Run Tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: ${{ github.event_name == 'pull_request' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Rust (Stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --locked --all

  benchmarks:
    name: benchmarks
    needs: test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ${{ matrix.os }}
    if: github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332

      - name: Set up Rust (Nightly)
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: nightly

      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Run Benchmarks
        run: cargo bench --locked
      
      - name: Worker info
        if: runner.os == 'Linux'
        run: |-
          cat /proc/cpuinfo
          cat /proc/meminfo